version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: momentum_postgres
    environment:
      POSTGRES_DB: momentum_calc
      POSTGRES_USER: momentum_user
      POSTGRES_PASSWORD: momentum_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data:/docker-entrypoint-initdb.d/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U momentum_user -d momentum_calc"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Streamlit Web Application
  webapp:
    build: .
    container_name: momentum_webapp
    ports:
      - "8501:8501"
    environment:
      # Database connection for local development
      DATABASE_URL: postgresql://momentum_user:momentum_password@postgres:5432/momentum_calc
      # Supabase credentials (for production compatibility)
      SUPABASE_URL: ${SUPABASE_URL:-}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY:-}
    volumes:
      - .:/app
      - /app/__pycache__
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Database Inspector (optional - for debugging)
  db-inspector:
    image: postgres:15-alpine
    container_name: momentum_db_inspector
    environment:
      PGPASSWORD: momentum_password
    depends_on:
      - postgres
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 10 &&
        echo 'Database tables:' &&
        psql -h postgres -U momentum_user -d momentum_calc -c '\dt' &&
        echo 'Stock metadata count:' &&
        psql -h postgres -U momentum_user -d momentum_calc -c 'SELECT COUNT(*) as stock_metadata FROM stockmetadata;' &&
        echo 'Price data count:' &&
        psql -h postgres -U momentum_user -d momentum_calc -c 'SELECT COUNT(*) as price_data FROM tickerprice;' &&
        echo 'Momentum scores count:' &&
        psql -h postgres -U momentum_user -d momentum_calc -c 'SELECT COUNT(*) as momentum_scores FROM momentumscores;'
      "

volumes:
  postgres_data:
